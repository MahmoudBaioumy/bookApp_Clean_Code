import 'package:flustra_template/core/common/error_handler/failure.dart';
import 'package:flustra_template/core/services/bot_toast/app_bot_toast.dart';
import 'package:flustra_template/modules/Wishist/logic/fav_cubit.dart';
import 'package:flustra_template/modules/best_seller/logic/best_seller_cubit.dart';
import 'package:flustra_template/modules/cart/data/request/cart_request.dart';
import 'package:flustra_template/modules/cart/logic/cart_cubit.dart';
import 'package:flutter/material.dart';

class BestSellerBooksDetailsController extends ChangeNotifier {
  // ========================== Constructor ==========================
  BestSellerBooksDetailsController();

  final bestSellerCubit _bestSellerCubit = bestSellerCubit.i;
  List<int> favoriteBookIds = [];
  // ========================== 🔒 Private variables 🔒 ==========================

  // ========================== 🗝️ Public variables 🗝️ ==========================

  // ========================== 🔥 initialization 🔥 ==========================
  Future<void> init() async {}

// ========================== 🌍 Public methods and events 🌍 ==========================

// ========================== 🔒 Private methods 🔒 ==========================

  // ========================== 🔥 onTapFavourite 🔥 ========================== //

  Future<void> onTapFavourite(int bookId) async {
    final res = await WishlistCubit.i.addToWishlist(bookId: bookId);
    res.fold(
          (failure) => failure.showToast(),
          (r) {
        AppBotToast.show("Added to wishlist Success", type: ToastType.success);

        // ✅ تحديث الـ favoriteBookIds حسب النتيجة
        if (!favoriteBookIds.contains(bookId)) {
          favoriteBookIds.add(bookId);
        }
        notifyListeners();
      },
    );
  }

  Future<void> loadFavoriteBooks() async {
    final res = await WishlistCubit.i.getWishlist(); // بيرجع Either<Failure, addWishlistResponse>

    res.fold(
          (failure) {
        failure.showToast();
        favoriteBookIds = [];
      },
          (wishlistResponse) {
        // wishlistResponse.data.data هنا قائمة كتب المفضلة
        favoriteBookIds = wishlistResponse.data
            ?.map((bookData) => bookData.id ?? 0) // استخدم field الصح للـ id
            .toList() ??
            [];
      },
    );

    notifyListeners();
  }
  Future<void> toggleFavourite(int bookId) async {
    if (favoriteBookIds.contains(bookId)) {
      // محاولة المسح
      try {
        final res = await WishlistCubit.i.removeFromWishlist(bookId: bookId);
        res.fold(
              (failure) => failure.showToast(), // فشل → يفضل القلب أحمر
              (r) {
            AppBotToast.show("Removed from wishlist", type: ToastType.success);
            favoriteBookIds.remove(bookId); // نجح → نشيل الكتاب
            notifyListeners();
          },
        );
      } catch (e) {
        // أي خطأ → القلب يفضل أحمر
      }
    } else {
      // محاولة الإضافة
      try {
        final res = await WishlistCubit.i.addToWishlist(bookId: bookId);
        res.fold(
              (failure) => failure.showToast(), // فشل → لا تغيير
              (r) {
            AppBotToast.show("Added to wishlist", type: ToastType.success);
            favoriteBookIds.add(bookId); // نجح → نضيف الكتاب
            notifyListeners();
          },
        );
      } catch (e) {}
    }
  }



// ========================== 🔥 onTapCart 🔥 ========================== //

  Future<void> onTapCart(int bookId) async {
    final res = await CartCubit.i.addToCart(request: AddToCartRequest(productId: bookId, quantity: 1));
    res.fold(
      (failure) => failure.showToast(),
      (cart) => AppBotToast.show(" add to cart Success total: ${cart.data?.total}"),
    );
  }

}
